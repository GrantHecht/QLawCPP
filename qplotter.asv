%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Q law plotting script by Donald Ellison
% March 15th 2014
% Uses earth_sphere function by Will Campbell
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

clear all
clc

% Simulation parameters

%is the output in canonical units or mks? 0:mks 1:canonical
canonical_units = 0;
%central body selection, 0:Earth 1:Vesta 2:A small body
central_body = 0;

%Parameters for Earth or Vesta
if (central_body == 0 && canonical_units == 1)
    mu = 1.0;
    DU = 6371.0;
    TU = 805.4572472296184;
    length_units = 'DU';
    body_title = 'Earth';

elseif (central_body == 1 && canonical_units == 1)
    mu = 1.0;
    DU = 262.5;
    TU = 1008.054378800061;
    length_units = 'DU';
    body_title = 'Vesta';
    
elseif (central_body == 0 && canonical_units == 0)
    mu = 398600.49;
    DU = 1.0;
    TU = 1.0;
    length_units = 'km';
    body_title = 'Earth';

elseif (central_body == 1 && canonical_units == 0)
    mu = 17.8;
    DU = 1.0;
    TU = 1.0;
    length_units = 'km';
    body_title = 'Vesta';
    
elseif (central_body == 2 && canonical_units == 0)
    mu = 0.0268;
    DU = 1.0;
    TU = 1.0;
    length_units = 'km';
    body_title = 'Small Asteroid';
end

% Extract COE data from file
filestring = 'qlaw_output.txt';
fileptr = fopen(filestring);
data = textscan(fileptr,'%f %f %f %f %f %f %f %f','headerlines',2);

p = data{1};
e = data{2};
inc = data{3};
ape = data{4};
ran = data{5};
mass = data{6};
time = data{7};
L = data{8};



% Close data file
fclose(fileptr);

% Calculate true anomaly and semimajor axis
tru = L - ran - ape;
sma = p./(1.0 - e.*e);

% Convert time from TU's to seconds
time = time * TU;

% Convert from COE's to cartesian state
r = sma.*(1.0 - e.*e)./(1.0 + e.*cos(tru));
v = sqrt(2*mu./r - mu./sma);
h = sqrt(mu*sma.*(1.0 - e.*e));

x = r.*(cos(tru+ape).*cos(ran) - sin(tru+ape).*cos(inc).*sin(ran));
y = r.*(cos(tru+ape).*sin(ran) + sin(tru+ape).*cos(inc).*cos(ran));
z = r.*(sin(tru+ape).*sin(inc));

vx = -(mu./h).*(cos(ran).*(sin(tru+ape) + e.*sin(ape))+sin(ran).*(cos(tru+ape)+e.*cos(ape)).*cos(inc));
vy = -(mu./h).*(sin(ran).*(sin(tru+ape) + e.*sin(ape))-cos(ran).*(cos(tru+ape)+e.*cos(ape)).*cos(inc));
vz = (mu./h).*(cos(tru+ape)+e.*cos(ape)).*sin(inc);

% Plot some results
figure(1);

grid on;

if central_body == 0
    earth_sphere(100,'km');

elseif central_body == 1
   vesta_r = 262.5; % Vesta's average radius
   [sx,sy,sz] = sphere(20);
   m = mesh(vesta_r*sx,vesta_r*sy,vesta_r*sz);
   Rcolor = 84;
   Gcolor = 84;
   Bcolor = 84;
   colornorm = norm([Rcolor Gcolor Bcolor]);
   ec = [Rcolor/colornorm Gcolor/colornorm Bcolor/colornorm];
   set(m,'facecolor','w','edgecolor',ec);

elseif central_body == 2
   vesta_r = 50.0; % Vesta's average radius
   [sx,sy,sz] = sphere(20);
   m = mesh(vesta_r*sx,vesta_r*sy,vesta_r*sz);
   Rcolor = 84;
   Gcolor = 84;
   Bcolor = 84;
   colornorm = norm([Rcolor Gcolor Bcolor]);
   ec = [Rcolor/colornorm Gcolor/colornorm Bcolor/colornorm];
   set(m,'facecolor','w','edgecolor',ec);
end

hold on;
traj = plot3(x,y,z,'r','MarkerSize',2);
xlabel(['x (',length_units,')']);
ylabel(['y (',length_units,')']);
zlabel(['z (',length_units,')']);
title(body_title);
set(gca,'DataAspectRatio',[1 1 1]);

figure(2);
semimajor = plot(time./86400,sma,'.b','MarkerSize',3);
grid on;
xlabel('time (days)');
ylabel(['semimajor axis (',length_units,')']);

figure(3);
eccentricity = plot(time./86400,e,'.b','MarkerSize',3);
grid on;
xlabel('time (days)');
ylabel('eccentricity');

figure(4);
inclination = plot(time./86400,inc*180/pi,'.b','MarkerSize',3);
grid on;
xlabel('time (days)');
ylabel('inclination (deg)');

ape = mod(ape,2*pi);
figure(5);
aperiapse = plot(time./86400,ape*180/pi,'.b','MarkerSize',3);
grid on;
xlabel('time (days)');
ylabel('argument of periapse (deg)');

ran = mod(ran,2*pi);
figure(6);
RAN = plot(time./86400,ran*180/pi,'.b','MarkerSize',3);
grid on;
xlabel('time (days)');
ylabel('RAN (deg)');

tru = mod(L - ran - ape, 2*pi);
figure(7);
trueanom = plot(time./86400,tru*180/pi,'.b','MarkerSize',3);
grid on;
xlabel('time (days)');
ylabel('true anomaly (deg)');

figure(8);
massplot = plot(time./86400,mass,'.b','MarkerSize',3);
grid on;
xlabel('time (days)');
ylabel('mass (kg)');

figure(9);
rper = plot(time./86400,sma.*(1 - e),'.b','MarkerSize',3);
grid on;
xlabel('time (days)');
ylabel(['periapse radius (',length_units,')']);

